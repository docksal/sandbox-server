#!/bin/bash
#
# This script create aws stack using template file template.json
#

template_file="template.yaml"

instance_opt=""
whitespace="[[:space:]]"

while [ "$1" != "" ]; do
    [[ "$1" =~ ${whitespace} ]] && arg=${1/=/=\"}\" || arg="${1}"
    eval "${arg}"
    shift
done

[[ "${stackname}" == "" ]] && { echo "Error: stackname is empty"; echo "Usage: $0 stackname=stackname keyname=keyname [instancetype=instancetype] [resourcetype=ec2|spot]"; exit; }
[[ "${keyname}" == "" ]] && { echo "Error: keyname is empty"; echo "Usage: $0 stackname=stackname keyname=keyname [instancetype=instancetype] [resourcetype=ec2|spot]"; exit; }
[[ "${instancetype}" != "" ]] && instance_opt+="ParameterKey=InstanceType,ParameterValue=${instancetype} "
[[ "${resourcetype}" != "" ]] && instance_opt+="ParameterKey=ResourceType,ParameterValue=${resourcetype} "

scripts/bash2yaml startup.sh

aws cloudformation create-stack --stack-name "${stackname}" --capabilities CAPABILITY_IAM --template-body file://${template_file} --parameters ParameterKey=KeyName,ParameterValue="${keyname}" ${instance_opt} >/dev/null && echo "Creation stack ${stackname} is in progress..." || exit 1
aws cloudformation wait stack-create-complete --stack-name "${stackname}" && echo "Stack "${stackname}" created!" || { echo "Timeout creation stack ${stackname}"; exit 1; }
aws cloudformation describe-stacks --stack-name "${stackname}"
