AWSTemplateFormatVersion: "2010-09-09"
Description: Sandbox server template (basic)

Parameters:
  InstanceType:
    Description: "EC2 instance type (default: t3.small = 2 vCPU, 2GB RAM)"
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
    ConstraintDescription: "Must be a valid EC2 instance type"
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: "Must be the name of an existing EC2 KeyPair"
  DataDiskSize:
    Description: "Persistent volume size (GiB). Valid range: 20-1024"
    Type: Number
    MinValue: 20
    MaxValue: 1024
    Default: 100

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic: Required"
        Parameters:
          - InstanceType
          - KeyName
      - Label:
          default: "Advanced: Optional"
        Parameters:
          - DataDiskSize
    ParameterLabels:
      InstanceType:
        default: "Instance type"
      KeyName:
        default: "SSH key"
      DataDiskSize:
        default: "Data disk size"

Mappings:
  Region2AMI:
    eu-north-1:
      AMI: ami-0d4e2b57f569e9daa
    ap-south-1:
      AMI: ami-0c5b1a88222ac79cb
    eu-west-3:
      AMI: ami-0e60c6afa19d896ee
    eu-west-2:
      AMI: ami-0917237b4e71c5759
    eu-west-1:
      AMI: ami-0dad359ff462124ca
    ap-northeast-2:
      AMI: ami-0de407404c33d1671
    ap-northeast-1:
      AMI: ami-0c1ac8728ef7f87a4
    sa-east-1:
      AMI: ami-001c16a3a4f5d85f1
    ca-central-1:
      AMI: ami-08a6203f59f9df866
    ap-southeast-1:
      AMI: ami-0b8cf0f359b1335e1
    ap-southeast-2:
      AMI: ami-0a1a4d97d4af3009b
    eu-central-1:
      AMI: ami-05c26ae4789875080
    us-east-1:
      AMI: ami-068663a3c619dd892
    us-east-2:
      AMI: ami-0e84e211558a022c0
    us-west-1:
      AMI: ami-075fd582acf0c0128
    us-west-2:
      AMI: ami-09dd2e08d601bff67

Resources:
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable SSH, HTTP, HTTPS'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0

  IPAddress:
    Type: 'AWS::EC2::EIP'

  IPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref ec2Instance
      EIP: !Ref IPAddress

  PersistentVolume:
    Type: "AWS::EC2::Volume"
    Properties:
      Size: !Ref DataDiskSize
      AvailabilityZone: !GetAtt ec2Instance.AvailabilityZone

  PersistentVolumeMount:
    Type: "AWS::EC2::VolumeAttachment"
    Properties:
      InstanceId: !Ref ec2Instance
      VolumeId: !Ref PersistentVolume
      Device: /dev/sdp

  ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      AvailabilityZone: !Ref "AWS::NoValue"
      ImageId: !FindInMap [Region2AMI, !Ref "AWS::Region", AMI]
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      BlockDeviceMappings:
        # Root volume
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '8'
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |

Outputs:
  InstanceID:
    Value: !Ref ec2Instance
  IPAddress:
    Value: !GetAtt ec2Instance.PublicIp
  InstanceURL:
    Value: !Join [ '', [ 'https://', !GetAtt ec2Instance.PublicIp, '.nip.io' ] ]
